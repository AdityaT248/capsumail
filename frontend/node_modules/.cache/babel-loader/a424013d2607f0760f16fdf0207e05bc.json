{"ast":null,"code":"import axios from 'axios';\n\n// Set up axios defaults\naxios.defaults.baseURL = 'http://localhost:8000';\n\n// Add a request interceptor to add auth token\naxios.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Add a response interceptor to handle errors\naxios.interceptors.response.use(response => {\n  return response;\n}, error => {\n  // Handle 401 Unauthorized errors\n  if (error.response && error.response.status === 401) {\n    // Clear token but don't redirect automatically\n    localStorage.removeItem('token');\n    console.error(\"Authentication error:\", error);\n  }\n  return Promise.reject(error);\n});\n\n// Message API\nconst messageApi = {\n  // Get all messages\n  getMessages: async () => {\n    try {\n      const response = await axios.get('/messages');\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching messages:', error);\n      throw error;\n    }\n  },\n  // Get a single message\n  getMessage: async id => {\n    try {\n      const response = await axios.get(`/messages/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error(`Error fetching message ${id}:`, error);\n      throw error;\n    }\n  },\n  // Create a new message\n  createMessage: async messageData => {\n    try {\n      const response = await axios.post('/messages', messageData);\n      return response.data;\n    } catch (error) {\n      console.error('Error creating message:', error);\n      throw error;\n    }\n  },\n  // Create a message with attachment\n  createMessageWithAttachment: async formData => {\n    try {\n      const response = await axios.post('/messages/with-attachment', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error creating message with attachment:', error);\n      throw error;\n    }\n  },\n  // Delete a message\n  deleteMessage: async id => {\n    try {\n      const response = await axios.delete(`/messages/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error(`Error deleting message ${id}:`, error);\n      throw error;\n    }\n  }\n};\nexport { messageApi };","map":{"version":3,"names":["axios","defaults","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","error","Promise","reject","response","status","removeItem","console","messageApi","getMessages","get","data","getMessage","id","createMessage","messageData","post","createMessageWithAttachment","formData","deleteMessage","delete"],"sources":["/Users/aditya.thakkar/Documents/TimeCapsule/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Set up axios defaults\naxios.defaults.baseURL = 'http://localhost:8000';\n\n// Add a request interceptor to add auth token\naxios.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers['Authorization'] = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Add a response interceptor to handle errors\naxios.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error) => {\n    // Handle 401 Unauthorized errors\n    if (error.response && error.response.status === 401) {\n      // Clear token but don't redirect automatically\n      localStorage.removeItem('token');\n      console.error(\"Authentication error:\", error);\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Message API\nconst messageApi = {\n  // Get all messages\n  getMessages: async () => {\n    try {\n      const response = await axios.get('/messages');\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching messages:', error);\n      throw error;\n    }\n  },\n  \n  // Get a single message\n  getMessage: async (id) => {\n    try {\n      const response = await axios.get(`/messages/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error(`Error fetching message ${id}:`, error);\n      throw error;\n    }\n  },\n  \n  // Create a new message\n  createMessage: async (messageData) => {\n    try {\n      const response = await axios.post('/messages', messageData);\n      return response.data;\n    } catch (error) {\n      console.error('Error creating message:', error);\n      throw error;\n    }\n  },\n  \n  // Create a message with attachment\n  createMessageWithAttachment: async (formData) => {\n    try {\n      const response = await axios.post('/messages/with-attachment', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error creating message with attachment:', error);\n      throw error;\n    }\n  },\n  \n  // Delete a message\n  deleteMessage: async (id) => {\n    try {\n      const response = await axios.delete(`/messages/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error(`Error deleting message ${id}:`, error);\n      throw error;\n    }\n  }\n};\n\nexport { messageApi }; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}