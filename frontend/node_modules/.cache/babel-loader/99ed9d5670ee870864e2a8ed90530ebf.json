{"ast":null,"code":"var _jsxFileName = \"/Users/aditya.thakkar/Documents/TimeCapsule/frontend/src/contexts/AuthContext.js\";\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\n\n// Create context\nconst AuthContext = createContext();\n\n// Custom hook to use the auth context\nexport const useAuth = () => useContext(AuthContext);\n\n// Provider component\nexport const AuthProvider = ({\n  children\n}) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Configure axios defaults\n  axios.defaults.baseURL = 'http://localhost:8000';\n\n  // Check if user is already logged in on mount\n  useEffect(() => {\n    const checkAuthStatus = async () => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        try {\n          // Get current user info\n          const response = await axios.get('/auth/me', {\n            headers: {\n              'Authorization': `Bearer ${token}`\n            }\n          });\n          setCurrentUser(response.data);\n          setIsAuthenticated(true);\n          console.log(\"Authentication successful on initial load\", response.data);\n        } catch (err) {\n          // Token might be expired or invalid\n          console.error('Auth check failed:', err);\n          localStorage.removeItem('token');\n        }\n      }\n      setLoading(false);\n    };\n    checkAuthStatus();\n  }, []);\n\n  // Register a new user\n  const register = async (name, email, password) => {\n    try {\n      setError(null);\n      const response = await axios.post('/auth/register', {\n        name,\n        email,\n        password\n      });\n      return response.data;\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.detail) || 'Registration failed');\n      throw err;\n    }\n  };\n\n  // Login user\n  const login = async (email, password) => {\n    try {\n      setError(null);\n\n      // Use FormData for token endpoint (OAuth2 standard)\n      const formData = new FormData();\n      formData.append('username', email);\n      formData.append('password', password);\n      const response = await axios.post('/auth/token', formData);\n\n      // Save token to localStorage\n      const token = response.data.access_token;\n      localStorage.setItem('token', token);\n\n      // Get user info\n      const userResponse = await axios.get('/auth/me', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n\n      // Set authentication state\n      setCurrentUser(userResponse.data);\n      setIsAuthenticated(true);\n      console.log(\"Login successful, user authenticated:\", userResponse.data);\n      return userResponse.data;\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      console.error(\"Login error:\", err);\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.detail) || 'Login failed');\n      throw err;\n    }\n  };\n\n  // Logout user\n  const logout = () => {\n    localStorage.removeItem('token');\n    setCurrentUser(null);\n    setIsAuthenticated(false);\n    console.log(\"User logged out\");\n  };\n\n  // Context value\n  const value = {\n    currentUser,\n    isAuthenticated,\n    loading,\n    error,\n    register,\n    login,\n    logout\n  };\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 5\n    }\n  }, children);\n};","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","axios","AuthContext","useAuth","AuthProvider","children","currentUser","setCurrentUser","isAuthenticated","setIsAuthenticated","loading","setLoading","error","setError","defaults","baseURL","checkAuthStatus","token","localStorage","getItem","response","get","headers","data","console","log","err","removeItem","register","name","email","password","post","_err$response","_err$response$data","detail","login","formData","FormData","append","access_token","setItem","userResponse","_err$response2","_err$response2$data","logout","value","createElement","Provider","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/aditya.thakkar/Documents/TimeCapsule/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\n\n// Create context\nconst AuthContext = createContext();\n\n// Custom hook to use the auth context\nexport const useAuth = () => useContext(AuthContext);\n\n// Provider component\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Configure axios defaults\n  axios.defaults.baseURL = 'http://localhost:8000';\n\n  // Check if user is already logged in on mount\n  useEffect(() => {\n    const checkAuthStatus = async () => {\n      const token = localStorage.getItem('token');\n      \n      if (token) {\n        try {\n          // Get current user info\n          const response = await axios.get('/auth/me', {\n            headers: {\n              'Authorization': `Bearer ${token}`\n            }\n          });\n          \n          setCurrentUser(response.data);\n          setIsAuthenticated(true);\n          console.log(\"Authentication successful on initial load\", response.data);\n        } catch (err) {\n          // Token might be expired or invalid\n          console.error('Auth check failed:', err);\n          localStorage.removeItem('token');\n        }\n      }\n      \n      setLoading(false);\n    };\n    \n    checkAuthStatus();\n  }, []);\n\n  // Register a new user\n  const register = async (name, email, password) => {\n    try {\n      setError(null);\n      const response = await axios.post('/auth/register', {\n        name,\n        email,\n        password\n      });\n      \n      return response.data;\n    } catch (err) {\n      setError(err.response?.data?.detail || 'Registration failed');\n      throw err;\n    }\n  };\n\n  // Login user\n  const login = async (email, password) => {\n    try {\n      setError(null);\n      \n      // Use FormData for token endpoint (OAuth2 standard)\n      const formData = new FormData();\n      formData.append('username', email);\n      formData.append('password', password);\n      \n      const response = await axios.post('/auth/token', formData);\n      \n      // Save token to localStorage\n      const token = response.data.access_token;\n      localStorage.setItem('token', token);\n      \n      // Get user info\n      const userResponse = await axios.get('/auth/me', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      \n      // Set authentication state\n      setCurrentUser(userResponse.data);\n      setIsAuthenticated(true);\n      \n      console.log(\"Login successful, user authenticated:\", userResponse.data);\n      \n      return userResponse.data;\n    } catch (err) {\n      console.error(\"Login error:\", err);\n      setError(err.response?.data?.detail || 'Login failed');\n      throw err;\n    }\n  };\n\n  // Logout user\n  const logout = () => {\n    localStorage.removeItem('token');\n    setCurrentUser(null);\n    setIsAuthenticated(false);\n    console.log(\"User logged out\");\n  };\n\n  // Context value\n  const value = {\n    currentUser,\n    isAuthenticated,\n    loading,\n    error,\n    register,\n    login,\n    logout\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}